#!/bin/bash -e
#
# S2I assemble script for the 'nodered-centos7' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

# If the 'nodered-centos7' assemble script is executed with the '-h' flag, print the usage.
if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/. ./
fi

if [ -n "$NR_PROJECT_REPO" ]; then
	echo "---> Installing application source (single project):"
	mkdir -p ./projects/main
	cp -Rf /tmp/src/. ./projects/main
	ls -lh

	if [ -f /tmp/src/settings.js ]; then
		cp /tmp/src/settings.js ./
	fi
fi

if [ -z "$NR_PROJECT_REPO"]; then
	echo "---> Installing application source (default mode):"
	cp -Rf /tmp/src/. ./
	ls -lh
fi

# Change the npm registry mirror if provided
if [ -n "$NPM_MIRROR" ]; then
	npm config set registry $NPM_MIRROR
fi

echo "---> Initializing empty config.json"
echo "{}" > .config.json

echo "---> Setting active project: main"
jq '. + { "projects": { "projects": { "main": { "credentialSecret": "nodered" } }, "activeProject": "main" }}' .config.json > .config.temp.json && mv .config.temp.json .config.json
cat .config.json

echo "---> Install Node-red project dependencies"
npm install --no-audit --no-update-notifier --save --save-prefix="~" --production projects/main

# echo "---> Fixing permissions..."
# chown -R 1001:0 ./ && chmod -R ug+rwx ./
